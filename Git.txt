

--------------------------------------------------------------------------Sites to Learn----------------------------------------------------------------
https://www.atlassian.com/git/tutorials/setting-up-a-repository
https://help.github.com/


 

https://www.youtube.com/watch?v=gAWiXbT599E-------------->Also check for adding SSH Key
https://www.youtube.com/watch?v=J_Clau1bYco
https://www.youtube.com/watch?v=HVsySz-h9r4

Git distributed VCS
what is Central vs Distributed VCS

---------------------------------------------------------------------------------Commands start---------------------------------------------------------
Check version
   git --version

set Config values
   git config --global user.name "Mantena Phanindra venkata Varma"
   git config --global user.email varma19.manthena@gmail.com
   git config --list

Need Help
   git help <verb>  eg:git help config or git config help

Initializing  a repository from existing code
   git init

before commit 
   git status
   (if there are any untracked files a stage it using "git add '<fileName>'" or "git add ."[for all the files to stage]

If we want other's not to get the some of the files that i checked in when others checked out,create .gitignore file using below command)
   touch .gitignore
   (Now in created gitignore file add the files which you dont want to get downloaded when others checked out the code)

Add files to staging Area
   git add '<fileName>' or git add -A

Remove files from staging area
   git reset '<fileName>' or git reset[all the files which are staged will be removed from staging area]


commit
   git commit -m '<Comments>'

to see our last commit
   git log


cloning a remote repository
   git clone <url> <where to clone> or git clone <url>[will clone to current directory to which git is pointing]


Vieving information about remote repository
  git remote -v 
  git branch -a

Changes made to the code
  git diff

There might be multiple developers working on the same project and since the last time after you clone there might be commits added by other developers.
Inorder to get them before we add our changes and commit we need to use below command 
  git pull origin master


To push the commited code 
  git push origin master


Actually we need to create a branch and work on it but not directly on master
  git branch <branchName>

  Eg:
  user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
  $ git branch GitDocs

  user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
  $ git branch
  GitDocs
  * master

  -->here * means that i am currently on that directory


**If i want to work on created branch i need to checkout 
  git checkout <branchName>

  Eg:
  user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
   $ git checkout GitDocs
   Switched to branch 'GitDocs'
  
  user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (GitDocs)
  $ git add -A
  

  user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (GitDocs)
  $ git commit -m "Code commit in first created branch"
  [GitDocs 035e851] Code commit in first created branch
  2 files changed, 257 insertions(+), 42 deletions(-)
  create mode 100644 Git_Image3.PNG

**If you want to push your branch[GitDocs] to repository
  git push -u origin GitDocs
  
  Eg:
  user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (GitDocs)
  $ git push -u origin GitDocs
  Enumerating objects: 6, done.
  Counting objects: 100% (6/6), done.
  Delta compression using up to 2 threads
  Compressing objects: 100% (4/4), done.
  Writing objects: 100% (4/4), 43.90 KiB | 6.27 MiB/s, done.
  Total 4 (delta 1), reused 0 (delta 0)
  remote: Resolving deltas: 100% (1/1), completed with 1 local object.
  remote:
  remote: Create a pull request for 'GitDocs' on GitHub by visiting:
  remote:      https://github.com/varma369/Docs/pull/new/GitDocs
  remote:
  To https://github.com/varma369/Docs.git
  * [new branch]      GitDocs -> GitDocs
  Branch 'GitDocs' set up to track remote branch 'GitDocs' from 'origin'

To see all the branches
  git branch -a

In future if we want to get the code or push we can just give
  git pull and push instead of "git push -u origin GitDocs"



****Merging a branch with master[this will be done after testing]

    Eg:
    ---->Commiting code in branch

     user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (GitDocs)
    $ git checkout master
    error: Your local changes to the following files would be overwritten by checkout:
        Git.txt
     Please commit your changes or stash them before you switch branches.
     Aborting

    user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (GitDocs)
     $ git status
     On branch GitDocs
     Your branch is up to date with 'origin/GitDocs'.

    Changes not staged for commit:
    (use "git add <file>..." to update what will be committed)
    (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   Git.txt

    no changes added to commit (use "git add" and/or "git commit -a")

    user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (GitDocs)
    $ git add .

   user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (GitDocs)
   $ git commit -m 'updated commands in Git.txt'
   [GitDocs 6504ca5] updated commands in Git.txt
   1 file changed, 41 insertions(+), 1 deletion(-)

   user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (GitDocs)
   $ git push
   Enumerating objects: 5, done.
   Counting objects: 100% (5/5), done.
   Delta compression using up to 2 threads
   Compressing objects: 100% (3/3), done.
   Writing objects: 100% (3/3), 970 bytes | 323.00 KiB/s, done.
   Total 3 (delta 1), reused 0 (delta 0)
   remote: Resolving deltas: 100% (1/1), completed with 1 local object.
   To https://github.com/varma369/Docs.git
   035e851..6504ca5  GitDocs -> GitDocs

   --->merging branch
   
     user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (GitDocs)
     $ git checkout master
     Switched to branch 'master'
 
     --->Tells the branches that have been merged so far
     user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
     $ git branch --merged
     * master

    --->The below will merge the changes in the master
    user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
    $ git merge GitDocs
    Updating 0c12b4a..4bcecf7
    Fast-forward
    Git.txt        | 392 ++++++++++++++++++++++++++++++++++++++++++++++++++-------
    Git_Image3.PNG | Bin 0 -> 43330 bytes
    2 files changed, 350 insertions(+), 42 deletions(-)
    create mode 100644 Git_Image3.PNG

    user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
    $ git push
    fatal: The current branch master has no upstream branch.
    To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

    user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
    $ git push --set-upstream origin master
    Total 0 (delta 0), reused 0 (delta 0)
    To https://github.com/varma369/Docs.git
    0c12b4a..4bcecf7  master -> master
    Branch 'master' set up to track remote branch 'master' from 'origin'.







Note 
---------------------------------------
1) All untracked file will be there in working directory,which are then staged for commit
   i.e files in working directory-->Stage-->commit
2) If we say git commit only it will open VM where we need to type comments and the esc key to
 exit insert then type :wq which will rewrite the file and exit vm


------------------------------------------

1)git init -->intitialize the repository in the current folder
  
      you can see hidden folder .git where git store everything including change sets,branches and so on.At any time you can
   delete this folder to delete the repository

   eg:
   ----
   user@user-PC MINGW64 /e/Workspace_Hub/gitDemo
   $ git init
   Initialized empty Git repository in E:/Workspace_Hub/gitDemo/.git/



2)git status -->to track the files whether there are any new files or changes in the existing files


   Eg:
   ---
   $ git status
   On branch master

      No commits yet

   Untracked files:
   (use "git add <file>..." to include in what will be committed)

        Commands.txt

   nothing added to commit but untracked files present (use "git add" to track)


   ---------
   The above is telling Command.txt is untracked


3)Lets fix this by   "git add Commands.txt"

  then type the below command 

  git status

  Eg:
   ---

  user@user-PC MINGW64 /e/Workspace_Hub/gitDemo (master)
  $ git add Commands.txt

  user@user-PC MINGW64 /e/Workspace_Hub/gitDemo (master)
  $ git status
  On branch master

  No commits yet

  Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   Commands.txt

  -----
  Now the file is ready to commit and this is called staging

  Now if you change content in the file and type git status
  and you will see both tracked and untracked for commands.txt
  but why?

  git had only statged file which is at that time i.e tracked and untracked for the latest added change i.e untracked and 
  now if you commit it will not contain latest change ,in order to have recent change "git add Commands.txt"

  i.e when ever something changes we need to stage that file so that changes will be reflected when they are comitted 

-----------------------------------------------------------------End--------------------------------------------------------------------------------------




-------------------------------------------------Start of Setting up Git repository-----------------------------------------------------------------------

--->Git stores configuration options in three separate files, which lets you scope options to individual repositories 
    (local), user (Global), or the entire system (system):

       Local: <repo>/.git/config – Repository-specific settings.
       Global: /.gitconfig – User-specific settings. This is where options set with the --global flag are stored.
       System: $(prefix)/etc/gitconfig – System-wide settings.



      git config --global user.name <name>
      Define the author name to be used for all commits by the current user.

      Adding the --local option or not passing a config level option at all, will set the user.name for the current local repository.

      git config --local user.email <email>
      Define the author email to be used for all commits by the current local repository

      git config --global alias.<alias-name> <git-command>
      Create a shortcut for a Git command. This is a powerful utility to create custom shortcuts for commonly used git commands. A simplistic example would be:

      git config --global alias.ci commit
      This creates a ci command that you can execute as a shortcut to git commit. To learn more about git aliases visit the git config page.

      git config --system core.editor <editor>
      Define the text editor used by commands like git commit for all users on the current machine. The <editor> argument should be the command that 
      launches the desired editor (e.g., vi). 
      This example introduces the --system option. The --system option will set the configuration for the entire system, meaning all users and repos 
      on a machine. For more detailed information on configuration levels visit the git config page.

      git config --global --edit
      Open the global configuration file in a text editor for manual editing. An in-depth guide on how to configure a text editor for git to use can
      be found on the Git config page.

    1)Global setup[tells who has commited the change]

      git config --global user.name "Mantena Phanindra venkata Varma"
      git config --global user.email varma19.manthena@gmail.com

    2)Now i want to create local repository for my project and commit to git
      go to the folder-->E:\Workspace_Hub\React_POC\react_js_assignment and right click git bash

Then do the below init,stage and commit
------------------------------------------------------------------------------------------------------------------------

user@user-PC MINGW64 /e/Workspace_Hub/React_POC/react_js_assignment
$ git init
Initialized empty Git repository in E:/Workspace_Hub/React_POC/react_js_assignment/.git/

user@user-PC MINGW64 /e/Workspace_Hub/React_POC/react_js_assignment (master)
$ ls
config/        package.json       public/    scripts/
node_modules/  package-lock.json  README.md  src/

user@user-PC MINGW64 /e/Workspace_Hub/React_POC/react_js_assignment (master)
$ git add .
warning: LF will be replaced by CRLF in .gitignore.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in README.md.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in config/env.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in config/jest/cssTransform.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in config/jest/fileTransform.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in config/paths.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in config/polyfills.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in config/webpack.config.dev.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in config/webpack.config.prod.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in config/webpackDevServer.config.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in package-lock.json.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in package.json.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in public/index.html.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in public/manifest.json.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in scripts/build.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in scripts/start.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in scripts/test.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in src/App.css.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in src/App.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in src/App.test.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in src/components/InputBox/Input.css.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in src/components/Layout/Layout.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in src/index.css.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in src/index.js.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in src/registerServiceWorker.js.
The file will have its original line endings in your working directory

user@user-PC MINGW64 /e/Workspace_Hub/React_POC/react_js_assignment (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   .gitignore
        new file:   README.md
        new file:   config/env.js
        new file:   config/jest/cssTransform.js
        new file:   config/jest/fileTransform.js
        new file:   config/paths.js
        new file:   config/polyfills.js
        new file:   config/webpack.config.dev.js
        new file:   config/webpack.config.prod.js
        new file:   config/webpackDevServer.config.js
        new file:   package-lock.json
        new file:   package.json
        new file:   public/UserData.json
        new file:   public/favicon.ico
        new file:   public/index.html
        new file:   public/manifest.json
        new file:   scripts/build.js
        new file:   scripts/start.js
        new file:   scripts/test.js
        new file:   src/App.css
        new file:   src/App.js
        new file:   src/App.test.js
        new file:   src/assets/Logo.jpg
        new file:   src/components/Button/Button.css
        new file:   src/components/Button/Button.js
        new file:   src/components/Clock/Clock.js
        new file:   src/components/Footer/Footer.css
        new file:   src/components/Footer/Footer.js
        new file:   src/components/Header/Header.css
        new file:   src/components/Header/Header.js
        new file:   src/components/InputBox/Input.css
        new file:   src/components/InputBox/Input.js
        new file:   src/components/Layout/Layout.js
        new file:   src/components/Login/Login.css
        new file:   src/components/Login/Login.js
        new file:   src/components/Logo/Logo.css
        new file:   src/components/Logo/Logo.js
        new file:   src/containers/Dashboard/Dashboard.css
        new file:   src/containers/Dashboard/Dashboard.js
        new file:   src/hoc/Auxilary.js
        new file:   src/index.css
        new file:   src/index.js
        new file:   src/registerServiceWorker.js
        new file:   src/store/reducer.js



user@user-PC MINGW64 /e/Workspace_Hub/React_POC/react_js_assignment (master)
$ git commit -m 'first Commit'
[master (root-commit) 2ac6c81] first Commit
 44 files changed, 14427 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 README.md
 create mode 100644 config/env.js
 create mode 100644 config/jest/cssTransform.js
 create mode 100644 config/jest/fileTransform.js
 create mode 100644 config/paths.js
 create mode 100644 config/polyfills.js
 create mode 100644 config/webpack.config.dev.js
 create mode 100644 config/webpack.config.prod.js
 create mode 100644 config/webpackDevServer.config.js
 create mode 100644 package-lock.json
 create mode 100644 package.json
 create mode 100644 public/UserData.json
 create mode 100644 public/favicon.ico
 create mode 100644 public/index.html
 create mode 100644 public/manifest.json
 create mode 100644 scripts/build.js
 create mode 100644 scripts/start.js
 create mode 100644 scripts/test.js
 create mode 100644 src/App.css
 create mode 100644 src/App.js
 create mode 100644 src/App.test.js
 create mode 100644 src/assets/Logo.jpg
 create mode 100644 src/components/Button/Button.css
 create mode 100644 src/components/Button/Button.js
 create mode 100644 src/components/Clock/Clock.js
 create mode 100644 src/components/Footer/Footer.css
 create mode 100644 src/components/Footer/Footer.js
 create mode 100644 src/components/Header/Header.css
 create mode 100644 src/components/Header/Header.js
 create mode 100644 src/components/InputBox/Input.css
 create mode 100644 src/components/InputBox/Input.js
 create mode 100644 src/components/Layout/Layout.js
 create mode 100644 src/components/Login/Login.css
 create mode 100644 src/components/Login/Login.js
 create mode 100644 src/components/Logo/Logo.css
 create mode 100644 src/components/Logo/Logo.js
 create mode 100644 src/containers/Dashboard/Dashboard.css
 create mode 100644 src/containers/Dashboard/Dashboard.js
 create mode 100644 src/hoc/Auxilary.js
 create mode 100644 src/index.css
 create mode 100644 src/index.js
 create mode 100644 src/registerServiceWorker.js
 create mode 100644 src/store/reducer.js



-->Now the code has been moved to local repository


--------------------------------------------------------------------------------------------------------------------
The below command will map remote repository at <remote_repo_url> to a ref in your local repo under <remote_name>.
 Once you have mapped the remote repo you can push local branches to it.

git remote add <remote_name> <remote_repo_url>

origin is the branch that i have on my local
--------------------------------------------------------------------------------------------------------------------


user@user-PC MINGW64 /e/Workspace_Hub/React_POC/react_js_assignment (master)
$ git remote add origin https://github.com/varma369/React.js_POC_1.git



-----------------------------------------------------------------------------------------------------------------------------
The below command pushes the code from local to remote here master is the default branch creeated in github which is remote
-----------------------------------------------------------------------------------------------------------------------------
user@user-PC MINGW64 /e/Workspace_Hub/React_POC/react_js_assignment (master)
$ git remote add origin https://github.com/varma369/React.js_POC_1.git

user@user-PC MINGW64 /e/Workspace_Hub/React_POC/react_js_assignment (master)
$ git push origin master
Enumerating objects: 65, done.
Counting objects: 100% (65/65), done.
Delta compression using up to 2 threads
Compressing objects: 100% (59/59), done.
Writing objects: 100% (65/65), 142.33 KiB | 1.64 MiB/s, done.
Total 65 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
remote:
remote: Create a pull request for 'master' on GitHub by visiting:
remote:      https://github.com/varma369/React.js_POC_1/pull/new/master
remote:
To https://github.com/varma369/React.js_POC_1.git
 * [new branch]      master -> master



-----------------------------End of Setting up repository for Git----------------------------------------------------------





-----------------------------Another Example for the above-----------------------------------------------------------------
user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
$ git add .

user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   Capture.PNG
        new file:   Capture1.PNG
        new file:   Commands.txt


user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
$ git add .

user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   Git.txt
        new file:   Git_Image1.PNG
        new file:   Git_image2.PNG


user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
$ git commit -m "All About Git First Commit"
[master (root-commit) 0c12b4a] All About Git First Commit
 3 files changed, 316 insertions(+)
 create mode 100644 Git.txt
 create mode 100644 Git_Image1.PNG
 create mode 100644 Git_image2.PNG

user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
$ git push origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
$ git remote add origin https://github.com/varma369/Docs.git

user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
$ git push origin master
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 2 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 204.98 KiB | 10.25 MiB/s, done.
Total 5 (delta 0), reused 0 (delta 0)
remote:
remote: Create a pull request for 'master' on GitHub by visiting:
remote:      https://github.com/varma369/Docs/pull/new/master
remote:
To https://github.com/varma369/Docs.git
 * [new branch]      master -> master




-------------------------------------------------End------------------------------------------------------------------------------






--------------------------------------Downloading the code from Git -->Start<-- ------------------------------------------------------------

user@user-PC MINGW64 /e/Workspace_Hub/gitRepos (master)
$ git clone https://github.com/varma369/React.js_POC_1.git
Cloning into 'React.js_POC_1'...
remote: Enumerating objects: 65, done.
remote: Counting objects: 100% (65/65), done.
remote: Compressing objects: 100% (58/58), done.
remote: Total 65 (delta 1), reused 65 (delta 1), pack-reused 0
Unpacking objects: 100% (65/65), done.
-------------------------------------------------------------------->End<-----------------------------------------------------------
